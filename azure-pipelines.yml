# Go
# Build your Go project.
# Add steps that test, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/go

trigger:
- master
  



variables:
  GOBIN:  '$(GOPATH)/bin' # Go binaries path
  GOPATH: '$(system.defaultWorkingDirectory)/gopath' # Go workspace path
  GO111MODULE: 'on'
  modulePath: '$(GOPATH)/src/github.com/$(build.repository.name)' # Path to the module's code
  Version.MajorMinor: 0.0
  Version.Revision: $[counter(variables['Version.MajorMinor'], 0)]

jobs:
- job: buildlinux
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - script: |
      mkdir -p '$(GOBIN)'
      mkdir -p '$(GOPATH)/pkg'
      mkdir -p '$(modulePath)'
      shopt -s extglob
      shopt -s dotglob
      mv !(gopath) '$(modulePath)'
      echo '##vso[task.prependpath]$(GOBIN)'
    displayName: 'Set up the Go workspace'
  - script: |
      go version
      go mod download
      mkdir $(Build.ArtifactStagingDirectory)/linux
      go build -o $(Build.ArtifactStagingDirectory)/terraform-provider-opendistro
    workingDirectory: '$(modulePath)'
    displayName: 'Get dependencies, then build'

- job: buildmac
  pool:
    vmImage: 'macOS-10.14'
  steps:
  - script: |
      mkdir -p '$(GOBIN)'
      mkdir -p '$(GOPATH)/pkg'
      mkdir -p '$(modulePath)'
      shopt -s extglob
      shopt -s dotglob
      mv !(gopath) '$(modulePath)'
      echo '##vso[task.prependpath]$(GOBIN)'
    displayName: 'Set up the Go workspace'
  - script: |
      go version
      go mod download
      mkdir $(Build.ArtifactStagingDirectory)/mac
      go build -o $(Build.ArtifactStagingDirectory)/mac/terraform-provider-opendistro
    workingDirectory: '$(modulePath)'
    displayName: 'Get dependencies, then build'










